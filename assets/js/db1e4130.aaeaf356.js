"use strict";(self.webpackChunkzonedstorage_io=self.webpackChunkzonedstorage_io||[]).push([[1788],{3905:(e,n,t)=>{t.d(n,{Zo:()=>d,kt:()=>k});var o=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function r(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},s=Object.keys(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(o=0;o<s.length;o++)t=s[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=o.createContext({}),c=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):r(r({},n),e)),t},d=function(e){var n=c(e.components);return o.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},m=o.forwardRef((function(e,n){var t=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),m=c(t),k=a,u=m["".concat(l,".").concat(k)]||m[k]||p[k]||s;return t?o.createElement(u,r(r({ref:n},d),{},{components:t})):o.createElement(u,r({ref:n},d))}));function k(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var s=t.length,r=new Array(s);r[0]=m;var i={};for(var l in n)hasOwnProperty.call(n,l)&&(i[l]=n[l]);i.originalType=e,i.mdxType="string"==typeof e?e:a,r[1]=i;for(var c=2;c<s;c++)r[c]=t[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1737:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>i,toc:()=>c});var o=t(7462),a=(t(7294),t(3905));const s={id:"myrocks",title:"Benchmarking MyRocks - ZenFS",sidebar_label:"MyRocks - ZenFS"},r=void 0,i={unversionedId:"benchmarking/myrocks",id:"benchmarking/myrocks",title:"Benchmarking MyRocks - ZenFS",description:"MyRocks is a storage engine for",source:"@site/docs/benchmarking/myrocks.md",sourceDirName:"benchmarking",slug:"/benchmarking/myrocks",permalink:"/docs/benchmarking/myrocks",draft:!1,tags:[],version:"current",frontMatter:{id:"myrocks",title:"Benchmarking MyRocks - ZenFS",sidebar_label:"MyRocks - ZenFS"},sidebar:"docs",previous:{title:"RocksDB - ZenFS",permalink:"/docs/benchmarking/rocksdb"},next:{title:"Linux Distributions",permalink:"/docs/distributions/linux"}},l={},c=[{value:"Setup",id:"setup",level:2},{value:"Modifying Linux Open File Limits",id:"modifying-linux-open-file-limits",level:3},{value:"Benchmarking",id:"benchmarking",level:2},{value:"Sysbench Prepare",id:"sysbench-prepare",level:3},{value:"Run sysbench workloads",id:"run-sysbench-workloads",level:3}],d={toc:c};function p(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,o.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("a",{parentName:"p",href:"http://myrocks.io/"},"MyRocks")," is a storage engine for\n",(0,a.kt)("a",{parentName:"p",href:"https://www.mysql.com/"},"MySQL")," based on ",(0,a.kt)("a",{parentName:"p",href:"http://rocksdb.org/"},"RocksDB"),", an\nembeddable, persistent key-value store.\nPercona MyRocks is an implementation for\n",(0,a.kt)("a",{parentName:"p",href:"https://www.percona.com/software/mysql-database/percona-server"},"Percona Server for MySQL"),"."),(0,a.kt)("p",{parentName:"blockquote"},"-- ",(0,a.kt)("cite",null,(0,a.kt)("a",{parentName:"p",href:"https://www.percona.com/doc/percona-server/8.0/myrocks/index.html"},"Percona")))),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"ZenFS is a file system plugin that utilizes\n",(0,a.kt)("a",{parentName:"p",href:"https://github.com/facebook/rocksdb"},"RocksDB"),"'s FileSystem interface to place\nfiles into zones on a raw zoned block device."),(0,a.kt)("p",{parentName:"blockquote"},"-- ",(0,a.kt)("cite",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/westerndigitalcorporation/zenfs"},"ZenFS")))),(0,a.kt)("p",null,"The benchmarking tool ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/akopytov/sysbench"},"sysbench")," can be\nused to report the performance of MyRocks backed by ZNS drives."),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"sysbench is a scriptable multi-threaded benchmark tool based on LuaJIT. It is\nmost frequently used for database benchmarks, but can also be used to create\narbitrarily complex workloads that do not involve a database server.\n-- ",(0,a.kt)("cite",null,(0,a.kt)("a",{parentName:"p",href:"https://github.com/akopytov/sysbench"},"sysbench")))),(0,a.kt)("h2",{id:"setup"},"Setup"),(0,a.kt)("p",null,"Percona MyRocks comes with ZNS support through ZenFS. The 'Installation' and\n'Configuration' sections of ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/percona/percona-server/blob/8.0/doc/source/myrocks/zenfs.rst"},"this\ndocument"),"\nmust be followed to install and prepare Percona MyRocks for the sysbench\nbenchmarks below."),(0,a.kt)("p",null,"Also follow the sysbench ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/akopytov/sysbench#building-and-installing-from-source"},"Building and Installing From Source\ninstructions"),"."),(0,a.kt)("h3",{id:"modifying-linux-open-file-limits"},"Modifying Linux Open File Limits"),(0,a.kt)("p",null,"After a successful installation the number of open files descriptors for the\nroot user and the MySQL application need to be increased by following the steps\nbelow. The limits may need to be modified to meet your workload goals and\nobjectives, and hardware specification."),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Edit the limit configuration file ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/security/limits.conf")," and add entries\nwith the item parameter ",(0,a.kt)("inlineCode",{parentName:"li"},"nofile")," for the MySQL user ",(0,a.kt)("inlineCode",{parentName:"li"},"root"),":")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"root       hard  nofile    500000 \nroot       soft  nofile    500000 \n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},"Edit the common-session file ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/pam.d/common-session")," and add the statement\nbelow:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"session required        pam_limits.so \n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},"Edit the system control configuration file ",(0,a.kt)("inlineCode",{parentName:"li"},"/etc/sysctl.conf"),", adding the max\nfile value:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"fs.file-max = 2097152\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Edit system control file and set the number file limit to higher value:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"# systemctl edit --full mysql\nLimitNOFILE = 500000 \n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"Reload the daemon and check if changes have been applied:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"# systemctl daemon-reload\n# service mysql restart\n# sysctl -p \n# cat /proc/$(pgrep -x mysqld)/limits\n# cat /proc/sys/fs/file-max\n")),(0,a.kt)("h2",{id:"benchmarking"},"Benchmarking"),(0,a.kt)("p",null,"Finally the test database can be created:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"# mysql -u root -p\nmysql> create database sbtest;\nmysql> quit\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"To check whether RocksDB is enabled the following command can be issued in the\nmysql console:"),(0,a.kt)("pre",{parentName:"admonition"},(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"mysql> show engines;\n"))),(0,a.kt)("h3",{id:"sysbench-prepare"},"Sysbench Prepare"),(0,a.kt)("p",null,"Prepare the database tables using the bulk load feature of the Percona Server\nwhich saves data on load time by setting the bulkload flag and disabling\nbinlogging in ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/mysql/mysql.conf.d/mysqld.cnf"),": "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"# service mysql stop\n# mv /etc/mysql/mysql.conf.d/mysqld.cnf /etc/mysql/mysql.conf.d/mysqld.cnf-bkup\n# cp <path-to>/bulkload-mysqld.cnf /etc/mysql/mysql.conf.d/mysqld.cnf\n# service mysql restart\n# /usr/local/share/sysbench/oltp_write_only.lua --db-driver=mysql --mysql-user=root --time=0 --create_secondary=off --mysql-password=<password> --mysql-host=localhost --mysql-db=sbtest --mysql-storage-engine=rocksdb --table-size=250000000 --tables=20 --threads=64 --report-interval=5 prepare\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Make sure to substitute the ",(0,a.kt)("inlineCode",{parentName:"p"},"mysql-password")," parameter.")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Given that ",(0,a.kt)("inlineCode",{parentName:"p"},"table-size * tables = db-entries"),", 10 million ",(0,a.kt)("inlineCode",{parentName:"p"},"db-entries")," correspond to ~2GB of capacity. Thus, for this example a 1TB database will be created.")),(0,a.kt)("p",null,"MySQL first searches the configuration file at ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/my.cnf")," which should\nreference ",(0,a.kt)("inlineCode",{parentName:"p"},"/etc/mysql/mysql.conf.d/mysqld.cnf")," (",(0,a.kt)("a",{parentName:"p",href:"https://dev.mysql.com/doc/refman/8.0/en/option-files.html"},"MySQL\ndocumentation"),")."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"bulkload-mysqld.cnf"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},'[mysqld]\npid-file        = /var/run/mysqld/mysqld.pid\nsocket          = /var/run/mysqld/mysqld.sock\ndatadir         = /var/lib/mysql\nlog-error       = /var/log/mysql/error.log\nloose-rocksdb-fs-uri=zenfs://dev:<short_block_device_name>\n\ndefault-storage-engine=rocksdb\nplugin-load-add=rocksdb=ha_rocksdb.so\ndefault-tmp-storage-engine=MyISAM\n\n# binary log\ndisable-log-bin\n\n# general\ntable_open_cache=256K\ntable_open_cache_instances=64\nrocksdb_bulk_load=1\nrocksdb_block_cache_size=64G\n\n# connections\nssl=0\nconnect_timeout=120\nback_log=4K\nmax_connections=4K\nmax_prepared_stmt_count=4M\n\n# RocksDB\nrocksdb_max_open_files=-1\nrocksdb_max_background_jobs=8\nrocksdb_max_total_wal_size=4G\nrocksdb_block_size=16K\nrocksdb_table_cache_numshardbits=6\n\n# triggering compaction if there are many sequential deletes\nrocksdb_compaction_sequential_deletes_count_sd=1\nrocksdb_compaction_sequential_deletes=199999\nrocksdb_compaction_sequential_deletes_window=200000\n\nrocksdb_default_cf_options="write_buffer_size=512M;target_file_size_base=1G;max_bytes_for_level_base=512M;level0_file_num_compaction_trigger=4;level0_slowdown_writes_trigger=10;max_write_buffer_number=8;compression=kLZ4Compression;bottommost_compression=kLZ4Compression;compression_opts=-14:4:0;block_based_table_factory={cache_index_and_filter_blocks=1;filter_policy=bloomfilter:10:false;whole_key_filtering=0};level_compaction_dynamic_level_bytes=true;optimize_filters_for_hits=true;memtable_prefix_bloom_size_ratio=0.05;prefix_extractor=capped:12;compaction_pri=kMinOverlappingRatio"\n\nrocksdb_max_subcompactions=4\nrocksdb_use_direct_reads=ON\nrocksdb_use_direct_io_for_flush_and_compaction=ON\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Replace ",(0,a.kt)("inlineCode",{parentName:"p"},"<short_block_device_name>")," with the device identifier of your ZNS drive\ne.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"nvme0n1"),".")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"With ",(0,a.kt)("inlineCode",{parentName:"p"},"rocksdb_block_cache_size=64G")," RocksDB alone will use up to 64GB of the\nsystem memory. This value can be adjusted according to the memory constraints.")),(0,a.kt)("h3",{id:"run-sysbench-workloads"},"Run sysbench workloads"),(0,a.kt)("p",null,"Before starting the benchmarking workloads the bulkload must be disabled and\nbinlogging should be enabled."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},"# service mysql stop\n# mv /etc/mysql/mysql.conf.d/mysqld.cnf /etc/mysql/mysql.conf.d/mysqld.cnf-bulkload-bkup\n# cp <path-to>/workload-mysqld.cnf /etc/mysql/mysql.conf.d/mysqld.cnf\n# service mysql restart\n# /usr/local/share/sysbench/oltp_update_index.lua --db-driver=mysql --mysql-user=root --time=60 --create_secondary=off --mysql-password=<password> --mysql-host=localhost --mysql-db=sbtest --mysql-storage-engine=rocksdb --table-size=250000000 --tables=20 --threads=64 --report-interval=5 run\n\nsysbench 1.1.0-df89d34 (using bundled LuaJIT 2.1.0-beta3)\n\nRunning the test with following options:\nNumber of threads: 64\nReport intermediate results every 5 second(s)\nInitializing random number generator from current time\n\n\nInitializing worker threads...\n\nThreads started!\n\n[ 5s ] thds: 64 tps: 11740.20 qps: 70494.16 (r/w/o: 0.00/47003.17/23490.99) lat (ms,95%): 9.73 err/s: 0.00 reconn/s: 0.00\n[ 10s ] thds: 64 tps: 11771.37 qps: 70609.00 (r/w/o: 0.00/47064.27/23544.73) lat (ms,95%): 9.39 err/s: 0.00 reconn/s: 0.00\n[ 15s ] thds: 64 tps: 12180.41 qps: 73105.84 (r/w/o: 0.00/48744.63/24361.21) lat (ms,95%): 8.90 err/s: 0.20 reconn/s: 0.00\n[ 20s ] thds: 64 tps: 12531.23 qps: 75172.57 (r/w/o: 0.00/50110.31/25062.26) lat (ms,95%): 8.58 err/s: 0.20 reconn/s: 0.00\n[ 25s ] thds: 64 tps: 13180.11 qps: 79099.27 (r/w/o: 0.00/52738.45/26360.82) lat (ms,95%): 8.28 err/s: 0.20 reconn/s: 0.00\n[ 30s ] thds: 64 tps: 13615.39 qps: 81692.15 (r/w/o: 0.00/54461.37/27230.78) lat (ms,95%): 7.84 err/s: 0.00 reconn/s: 0.00\n[ 35s ] thds: 64 tps: 14092.34 qps: 84546.84 (r/w/o: 0.00/56362.36/28184.48) lat (ms,95%): 7.17 err/s: 0.00 reconn/s: 0.00\n[ 40s ] thds: 64 tps: 14534.30 qps: 87213.40 (r/w/o: 0.00/58144.80/29068.60) lat (ms,95%): 7.30 err/s: 0.00 reconn/s: 0.00\n[ 45s ] thds: 64 tps: 14967.48 qps: 89800.88 (r/w/o: 0.00/59865.32/29935.56) lat (ms,95%): 6.55 err/s: 0.40 reconn/s: 0.00\n[ 50s ] thds: 64 tps: 15048.07 qps: 90288.80 (r/w/o: 0.00/60192.67/30096.13) lat (ms,95%): 6.55 err/s: 0.00 reconn/s: 0.00\n[ 55s ] thds: 64 tps: 15939.32 qps: 95627.92 (r/w/o: 0.00/63752.48/31875.44) lat (ms,95%): 6.43 err/s: 0.00 reconn/s: 0.00\n[ 60s ] thds: 64 tps: 15795.73 qps: 94790.17 (r/w/o: 0.00/63195.52/31594.66) lat (ms,95%): 6.09 err/s: 0.00 reconn/s: 0.00\nSQL statistics:\n    queries performed:\n        read:                            0\n        write:                           3308279\n        other:                           1654141\n        total:                           4962420\n    transactions:                        827068 (13782.32 per sec.)\n    queries:                             4962420 (82694.12 per sec.)\n    ignored errors:                      5      (0.08 per sec.)\n    reconnects:                          0      (0.00 per sec.)\n\nThroughput:\n    events/s (eps):                      13782.3199\n    time elapsed:                        60.0093s\n    total number of events:              827068\n\nLatency (ms):\n         min:                                    0.49\n         avg:                                    4.64\n         max:                                   33.85\n         95th percentile:                        7.98\n         sum:                              3838911.90\n\nThreads fairness:\n    events (avg/stddev):           12922.9375/27.80\n    execution time (avg/stddev):   59.9830/0.00\n")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Make sure to substitute the ",(0,a.kt)("inlineCode",{parentName:"p"},"mysql-password")," parameter.")),(0,a.kt)("p",null,"Depending on the desired workload ",(0,a.kt)("inlineCode",{parentName:"p"},"oltp_update_index.lua")," might be replaced\nalong with different sysbench parameters like ",(0,a.kt)("inlineCode",{parentName:"p"},"--table-size"),".\nFor read workloads the database should contain the specified table dimensions.\nZNS shines at the point when conventional SSDs are in their ",(0,a.kt)("a",{parentName:"p",href:"https://www.snia.org/sites/default/files/UnderstandingSSDPerformance.Jan12.web_.pdf"},"steady\nstate"),".\nTherefore, filling the drive with a sequential workload and overwriting it with a\nrandom workload afterwards should be considered."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"workload-mysqld.cnf"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-plaintext"},'[mysqld]\npid-file        = /var/run/mysqld/mysqld.pid\nsocket          = /var/run/mysqld/mysqld.sock\ndatadir         = /var/lib/mysql\nlog-error       = /var/log/mysql/error.log\nloose-rocksdb-fs-uri=zenfs://dev:<short_block_device_name>\n\ndefault-storage-engine=rocksdb\nplugin-load-add=rocksdb=ha_rocksdb.so\ndefault-tmp-storage-engine=MyISAM\n\n# binary log\nbinlog_space_limit=4G\nsync_binlog=1K\n\n# general\ntable_open_cache=256K\ntable_open_cache_instances=64\nrocksdb_bulk_load=0\nrocksdb_block_cache_size=64G\n\n# connections\nssl=0\nconnect_timeout=120\nback_log=4K\nmax_connections=4K\nmax_prepared_stmt_count=4M\n\n# RocksDB\nrocksdb_max_open_files=-1\nrocksdb_max_background_jobs=8\nrocksdb_max_total_wal_size=4G\nrocksdb_block_size=16K\nrocksdb_table_cache_numshardbits=6\n\n# triggering compaction if there are many sequential deletes\nrocksdb_compaction_sequential_deletes_count_sd=1\nrocksdb_compaction_sequential_deletes=199999\nrocksdb_compaction_sequential_deletes_window=200000\n\nrocksdb_default_cf_options="write_buffer_size=512M;target_file_size_base=1G;max_bytes_for_level_base=512M;level0_file_num_compaction_trigger=4;level0_slowdown_writes_trigger=10;max_write_buffer_number=8;compression=kLZ4Compression;bottommost_compression=kLZ4Compression;compression_opts=-14:4:0;block_based_table_factory={cache_index_and_filter_blocks=1;filter_policy=bloomfilter:10:false;whole_key_filtering=0};level_compaction_dynamic_level_bytes=true;optimize_filters_for_hits=true;memtable_prefix_bloom_size_ratio=0.05;prefix_extractor=capped:12;compaction_pri=kMinOverlappingRatio"\n\nrocksdb_max_subcompactions=4\nrocksdb_use_direct_reads=ON\nrocksdb_use_direct_io_for_flush_and_compaction=ON\n')),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Replace ",(0,a.kt)("inlineCode",{parentName:"p"},"<short_block_device_name>")," with the device identifier of your ZNS drive\ne.g. ",(0,a.kt)("inlineCode",{parentName:"p"},"nvme0n1"),".")),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"With ",(0,a.kt)("inlineCode",{parentName:"p"},"rocksdb_block_cache_size=64G")," RocksDB alone will use up to 64GB of the\nsystem memory. This value can be adjusted according to the memory constraints.")))}p.isMDXComponent=!0}}]);